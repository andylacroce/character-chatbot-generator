/* =============================
   ChatPage.module.css
   - Layout and style rules for the main chat page
   - Ensures robust, viewport-safe layout for chat, spinner, and input
   - Uses CSS variables from globals.css for theme consistency
   ============================= */

/* --- Main Chat Layout --- */
/*
  Sets up the main flex column layout for the chat page.
  Ensures full viewport coverage and scroll safety.
*/
.chatLayout {
  display: flex;
  flex-direction: column;
  width: 100vw;
  height: 100vh;
  max-width: 100vw;
  max-height: 100vh;
  margin: 0;
  background: var(--color-background);
  min-height: 0; /* Ensure flex children can shrink for scrolling */
}

/* --- Chat Header --- */
/*
  Sticky header for chat title and controls.
  Uses box-shadow for separation and flex for layout.
*/
.chatHeader {
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  background: var(--color-background);
  padding: 10px 0 0 0;
  box-shadow: 0 2px 8px #0003;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
}

/* --- Header Content --- */
/*
  Container for header content, ensures proper spacing and alignment.
*/
.chatHeaderContent {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 0 12px;
  box-sizing: border-box;
}

/* --- Chat Messages Scroll Area --- */
/*
  Scrollable area for chat messages.
  Uses flex to fill available space and allow vertical scrolling.
*/
.chatMessagesScroll {
  flex: 1 1 auto;
  min-height: 0; /* Required for flexbox scroll */
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  background: var(--color-background);
  padding-left: 12px;
  padding-right: 12px;
  position: relative;
  padding-bottom: 70px; /* Only account for input area, not spinner, to avoid double spacing */
  min-height: 0; /* allow flexbox to shrink for scrolling */
}

/* --- Spinner Container --- */
/*
  Sticky container for loading spinner.
  Positioned above the input area.
*/
.spinnerContainerFixed {
  position: sticky;
  bottom: 70px; /* input bar height */
  z-index: 150;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  pointer-events: none;
  height: 70px;
}

/* --- Chat Input Area --- */
/*
  Sticky input area for user messages.
  Includes shadow for separation and padding for spacing.
*/
.chatInputArea {
  position: sticky;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  background: var(--color-background);
  z-index: 200;
  box-shadow: 0 -2px 12px #000a;
  padding: 10px 0;
}

/* --- Chat Input Container --- */
/*
  Wrapper for input and send button.
  Ensures proper alignment and spacing.
*/
.chatInputContainer {
  display: flex;
  width: 100%;
  border-radius: 8px;
  overflow: hidden;
}

/* --- Chat Input --- */
/*
  Text input for user messages.
  Styled for readability and accessibility.
*/
.chatInput {
  flex: 1;
  background-color: var(--input-bg);
  color: var(--input-text);
  border: none;
  padding: 1rem;
  font-size: 1.25rem;
  outline: none;
}

.chatInput::placeholder {
  color: var(--input-placeholder);
}

/* --- Send Button --- */
/*
  Button for sending messages.
  Styled for interactivity and accessibility.
*/
.chatSendButton {
  flex: 0 0 auto;
  background-color: var(--send-button-bg);
  color: var(--send-button-text);
  border: none;
  padding: 1rem 2rem;
  font-size: 1.25rem;
  cursor: pointer;
  outline: none;
}

.chatSendButton:hover {
  background-color: var(--send-button-hover-bg);
}

.chatSendButton.disabled {
  background-color: var(--disabled-bg);
  color: var(--disabled-text);
  cursor: not-allowed;
}

/* --- Download Transcript Button --- */
/*
  Wrapper for the download transcript button.
  Adds spacing and alignment.
*/
.downloadTranscriptWrapper {
  margin-top: 1.2rem; /* increased from 0.3rem for more space above the button */
  display: flex;
  justify-content: flex-start;
  width: 100%;
}

/* --- Modal Backdrop --- */
/*
  Backdrop for modal dialogs.
  Covers the entire viewport with a semi-transparent overlay.
*/
.modalBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.6);
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* --- Modal Error --- */
/*
  Container for error messages in modals.
  Styled for readability and accessibility.
*/
.modalError {
  background: var(--color-background, #fff);
  color: var(--color-text, #222);
  border-radius: 16px;
  box-shadow: 0 8px 32px #0008;
  padding: 2.5rem 2rem 2rem 2rem;
  min-width: 320px;
  max-width: 480px;
  width: 100%;
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  word-break: break-word;
  white-space: normal;
}

@media (max-width: 600px) {
  .modalError {
    max-width: 95vw;
    padding: 1.5rem 0.5rem 1.5rem 0.5rem;
    font-size: 1rem;
  }
}

/* --- API Error Title --- */
/*
  Title for API error messages.
  Styled for emphasis and visibility.
*/
.apiErrorTitle {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 0.5rem;
  color: var(--color-primary, #7c4dff);
}

/* --- API Error Description --- */
/*
  Description text for API error messages.
  Styled for readability.
*/
.apiErrorDesc {
  font-size: 1.1rem;
  color: var(--color-text, #222);
}

@media (max-width: 800px) {
  .chatLayout,
  .chatHeader,
  .chatHeaderContent,
  .chatMessagesScroll,
  .chatInputArea,
  .spinnerContainerFixed {
    width: 100vw !important;
    max-width: 100vw !important;
    margin: 0 !important;
    left: 0 !important;
    right: 0 !important;
    transform: none !important;
  }
  .chatHeader,
  .chatHeaderContent,
  .chatMessagesScroll {
    padding-left: 4vw !important;
    padding-right: 4vw !important;
  }
}

@media (max-width: 576px) {
  .chatLayout,
  .chatHeader,
  .chatHeaderContent,
  .chatMessagesScroll,
  .chatInputArea,
  .spinnerContainerFixed {
    width: 100vw !important;
    max-width: 100vw !important;
    margin: 0 !important;
    left: 0 !important;
    right: 0 !important;
    transform: none !important;
  }
  .chatHeader,
  .chatHeaderContent,
  .chatMessagesScroll {
    padding-left: 4vw !important;
    padding-right: 4vw !important;
  }
  .chatMessagesScroll {
    padding-bottom: 70px !important; /* Only account for input area, not spinner, to avoid double spacing on mobile */
  }
  .gandalfImageContainer img {
    width: 70px !important;
    height: 70px !important;
    margin-bottom: 18px !important;
  }
  .chatInputArea {
    padding-left: 2vw;
    padding-right: 2vw;
  }
  .spinnerContainerFixed {
    height: 60px;
  }
  .chatInput {
    padding: 0.5rem;
    font-size: 1rem;
  }
  .chatSendButton {
    padding: 0.5rem 1rem;
    font-size: 1rem;
  }
  .chat-messages :global(.my-2) {
    margin-left: 8vw !important;
    margin-right: 8vw !important;
  }
}
